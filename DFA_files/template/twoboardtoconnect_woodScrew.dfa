#! NX/KF 4.0
DefClass: twoboardtoconnect_woodScrew (ug_base_part);
#CSYS
(vector parameter) direction: vector(0,0,1);
(point parameter) start_point: point(30,0,0);
#the dimensions of the 2 boards
    (number parameter) L_1: <mm_length>;
    (number parameter) W_1: <mm_width>;
    (number parameter) Th_1: <mm_thickness_text>;
    (number parameter) L_2: <sm_length>;
    (number parameter) W_2: <sm_width>;
    (number parameter) Th_2: <sm_thickness_text>;
#the position to connect
    (point parameter) connect_point: point(min(L_1:, L_2:)/2,min(W_1:, W_2:)/2,Th_1: + Th_2:) + (start_point: - point(0,0,0));
#the required mechanical performance 
    (number parameter) connection_capacity: <connection_capacity>;
    (number parameter) connection_requirement: <connection_requirement>;

    (number parameter) diameter_cylinder: <diameter_wood_screw>;
    (number parameter) length_wood_screw: <ls_length>;
    
    (list parameter)    head_thickness_list: {0.035, 0.043, 0.051, 0.059, 0.067, 0.075, 0.083, 0.091, 0.1, 0.108, 0.116, 0.132, 0.153, 0.164, 0.191, 0.196, 0.23};
    (list parameter)    diameter_list: {0.06, 0.073, 0.086, 0.099, 0.112, 0.125, 0.138, 0.151, 0.164, 0.177, 0.19, 0.216, 0.242, 0.268, 0.294, 0.32, 0.372};

(Child) board1: {
    class, ug_block;
    length, L_1:;
    width, W_1:;
    height, Th_1:;
    origin, start_point:;
};

(Child) board2: {
    class, ug_block;
    length, L_2:;
    width, w_2:;
    height, Th_2:;
    origin, point(0, 0, Th_1:) + (start_point: - point(0,0,0));
};

(Child) holes1: {
    Class,  ug_cylinder;
    Origin, connect_point:;
    Diameter, diameter_cylinder:;
    Direction, -direction:;
    Height, length_wood_screw:;
    Operation, Subtract;
    target, {board1:};    
};

(Child) holes2: {
    Class,  ug_cylinder;
    Origin, connect_point:;
    Diameter, diameter_cylinder:;
    Direction, -direction:;
    Height, Th_2:;
    Operation, Subtract;
    target, {board2:};
};

(Child) wood_screw: {
    Class,  wood_screw_zzz;
    start_point, connect_point:-vector(0,0,length_wood_screw:+nth(getIndex:(diameter_list:, diameter_cylinder:), head_thickness_list:););
    diameter, diameter_cylinder:;
    length_total, length_wood_screw:;
};

(Child) body_colored: {
    Class, ug_body; 
    Feature, {board2:};
    color,  if(connection_capacity: < connection_requirement:) then ug_askClosestColor(RED) 
       else if(connection_capacity: > connection_requirement:) then ug_askClosestColor(GREEN)
       else ug_askClosestColor(YELLOW); 
};

# Methods of the class
(Method Number) getIndex:(list $lst, Number $ToCheck) 
@{
    Loop {
        for $index from 1 to 1000; 
        for $a is nth($index, $lst);
        if ( $a = $ToCheck ) return $index;
        return is -1;
    };
};
